{"version":3,"file":"static/js/289.887e5891.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.syled.js","components/Filter/Filter.js","pages/ContactsPage.js","pages/Pages.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactListUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 15px;\n  width: auto;\n`;\n\nexport const ContactLi = styled.li`\n  display: flex;\n  min-width: 480px;\n  gap: 20px;\n\n  :nth-child(2n) {\n    background-color: #f3f3f3;\n  }\n\n  & p {\n    font-size: 20px;\n    display: list-item;\n    width: 150px;\n  }\n  & span {\n    font-size: 20px;\n    width: 110px;\n  }\n  & button {\n    padding: 7px;\n    width: 66px;\n    max-height: 30px;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    border-radius: 10px;\n    margin-left: auto;\n    transition: 0.3s;\n    &:hover,\n    :focus {\n      background-color: #7e5fff;\n      color: #ffffff;\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ContactListUl, ContactLi } from './ContactList.styled';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filterValue = useSelector(state => state.filter);\n\n  const contactsFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue)\n  );\n\n  return (\n    <ContactListUl>\n      {contactsFilter.map(({ id, name, number }) => {\n        return (\n          <ContactLi key={id}>\n            <p>{name} :</p>\n            <span>{number}</span>\n            <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Remove\n            </button>\n          </ContactLi>\n        );\n      })}\n    </ContactListUl>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  gap: 30px;\n  padding: 10px;\n  width: 500px;\n  height: 250px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.61);\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n`;\n\nexport const ContactsInput = styled.input`\n  width: 250px;\n  padding: 10px;\n  border: 1px solid #b3bec8;\n  border-radius: 5px;\n  background: transparent;\n  outline: none;\n  color: #212121;\n  font-size: 1em;\n\n  &:valid,\n  :focus,\n  :hover {\n    border: 1px solid #7e5fff;\n  }\n\n  &:valid ~ span,\n  :focus ~ span {\n    color: #7e5fff;\n    transform: translateX(10px) translateY(-7px);\n    font-size: 0.75em;\n    padding: 0 10px;\n    background-color: #fcfcfc;\n    border-left: 1px solid #7e5fff;\n    border-right: 1px solid #7e5fff;\n    letter-spacing: 0.1em;\n  }\n`;\n\nexport const ContactsSpan = styled.span`\n  position: absolute;\n  left: 0;\n  padding: 10px;\n  pointer-events: none;\n  font-size: 1em;\n  color: #212121;\n  text-transform: uppercase;\n  transition: 0.5s;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 150px;\n  padding: 7px;\n  font-size: 20px;\n  color: #212121;\n  cursor: pointer;\n  background-color: transparent;\n  border: 1px solid #212121;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    border: 1px solid #7e5fff;\n    border-radius: 5px;\n    background-color: #7e5fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  ContactsSpan,\n  Form,\n  InputBox,\n  ContactsInput,\n  SubmitButton,\n} from './ContactsForm.styled';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const NameChange = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const NumberChange = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    const newContact = { id: nanoid(), name, number };\n    contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${name} is already in the contacts`)\n      : dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form className=\"form\" onSubmit={handelSubmit}>\n      <InputBox>\n        <ContactsInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={NameChange}\n        />\n        <ContactsSpan>Name</ContactsSpan>\n      </InputBox>\n      <InputBox>\n        <ContactsInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={NumberChange}\n        />\n        <ContactsSpan>Number</ContactsSpan>\n      </InputBox>\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n};\n\nexport default ContactsForm;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  margin-top: 30px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n  width: 250px;\n  padding: 10px;\n  border: 1px solid #b3bec8;\n  border-radius: 5px;\n  background: transparent;\n  /* outline: 1px solid #2f5870; */\n  font-size: 1em;\n\n  &:hover,\n  &:focus {\n    outline: 1px solid #7e5fff;\n  }\n`;\n","// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FilterLabel, FilterInput, FilterWrapper } from './Filter.syled';\nimport { getFilterContsacts } from '../../redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const contactsFilter = useSelector(state => state.filter);\n\n  return (\n    <FilterWrapper>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"search\"\n          value={contactsFilter}\n          onChange={event =>\n            dispatch(getFilterContsacts(event.currentTarget.value))\n          }\n        ></FilterInput>\n      </FilterLabel>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import ContactList from 'components/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport ContactsForm from '../components/ContactsForm/ContactsForm';\nimport Filter from '../components/Filter/Filter';\nimport { ContactsContainer } from './Pages.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(state => state.contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsContainer>\n      <ContactsForm />\n      <Filter />\n      {items.length > 0 ? (\n        <ContactList\n        // contacts={getFilterContsacts()}\n        />\n      ) : (\n        <p className=\"listEmpty\">Contact list is empty.</p>\n      )}\n    </ContactsContainer>\n  );\n};\n\nexport default ContactsPage;\n","import styled, { keyframes } from 'styled-components';\nimport { bounceIn, fadeIn } from 'react-animations';\nconst fadeAnimation = keyframes`${bounceIn}`;\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nexport const LoginContainer = styled.div`\n  animation: 1s ${fadeAnimation};\n`;\n\nexport const RegisterContainer = styled.div`\n  animation: 1s ${fadeAnimation};\n`;\n\nexport const ContactsContainer = styled.div`\n  animation: 1s ${fadeInAnimation};\n`;\n"],"names":["ContactListUl","styled","ContactLi","ContactList","dispatch","useDispatch","contacts","useSelector","state","items","filterValue","filter","contactsFilter","contact","name","toLowerCase","includes","map","id","number","type","onClick","deleteContact","Form","InputBox","ContactsInput","ContactsSpan","SubmitButton","useState","setName","setNumber","reset","className","onSubmit","event","preventDefault","newContact","nanoid","find","alert","addContact","pattern","title","required","value","onChange","currentTarget","FilterWrapper","FilterLabel","FilterInput","getFilterContsacts","useEffect","fetchContacts","length","fadeAnimation","keyframes","bounceIn","fadeInAnimation","fadeIn","LoginContainer","RegisterContainer","ContactsContainer"],"sourceRoot":""}